"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const i18n_1 = require("@kbn/i18n");
const react_1 = tslib_1.__importDefault(require("react"));
const react_apollo_1 = require("react-apollo");
const helper_1 = require("../../../lib/helper");
const functional_1 = require("../../functional");
const get_monitor_charts_1 = require("./get_monitor_charts");
exports.MonitorChartsQuery = ({ colors: { primary, secondary, danger }, dateRangeStart, dateRangeEnd, monitorId, autorefreshIsPaused, autorefreshInterval, }) => {
    return (react_1.default.createElement(react_apollo_1.Query, { pollInterval: autorefreshIsPaused ? undefined : autorefreshInterval, query: get_monitor_charts_1.createGetMonitorChartsQuery, variables: { dateRangeStart, dateRangeEnd, monitorId } }, ({ loading, error, data }) => {
        if (loading) {
            return i18n_1.i18n.translate('xpack.uptime.monitorCharts.loadingMessage', {
                defaultMessage: 'Loadingâ€¦',
            });
        }
        if (error) {
            return i18n_1.i18n.translate('xpack.uptime.monitorCharts.errorMessage', {
                values: { message: error.message },
                defaultMessage: 'Error {message}',
            });
        }
        const { monitorChartsData, monitorChartsData: { durationMaxValue, statusMaxCount }, } = data;
        const durationMax = helper_1.convertMicrosecondsToMilliseconds(durationMaxValue);
        // These limits provide domain sizes for the charts
        const checkDomainLimits = [0, statusMaxCount];
        const durationDomainLimits = [0, durationMax ? durationMax : 0];
        return (react_1.default.createElement(functional_1.MonitorCharts, { checkDomainLimits: checkDomainLimits, danger: danger, durationDomainLimits: durationDomainLimits, monitorChartData: monitorChartsData, primary: primary, secondary: secondary }));
    }));
};
