"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const eui_1 = require("@elastic/eui");
const react_1 = tslib_1.__importDefault(require("react"));
const react_apollo_1 = require("react-apollo");
const functional_1 = require("../../functional");
const get_monitor_page_title_1 = require("./get_monitor_page_title");
exports.MonitorPageTitleQuery = ({ autorefreshInterval, autorefreshIsPaused, monitorId, }) => (react_1.default.createElement(react_apollo_1.Query, { pollInterval: autorefreshIsPaused ? undefined : autorefreshInterval, query: get_monitor_page_title_1.getMonitorPageTitle, variables: { monitorId } }, ({ loading, error, data }) => {
    if (loading) {
        return react_1.default.createElement(eui_1.EuiLoadingSpinner, { size: "xl" });
    }
    if (error) {
        return error;
    }
    const monitorPageTitle = data.monitorPageTitle;
    return react_1.default.createElement(functional_1.MonitorPageTitle, { pageTitle: monitorPageTitle });
}));
