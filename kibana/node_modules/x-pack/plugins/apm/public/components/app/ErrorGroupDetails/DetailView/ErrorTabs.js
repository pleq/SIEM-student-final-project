"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const i18n_1 = require("@kbn/i18n");
const lodash_1 = require("lodash");
const idx_1 = require("x-pack/plugins/apm/common/idx");
const tabConfig_1 = require("../../../shared/PropertiesTable/tabConfig");
exports.logStacktraceTab = {
    key: 'log_stacktrace',
    label: i18n_1.i18n.translate('xpack.apm.propertiesTable.tabs.logStacktraceLabel', {
        defaultMessage: 'Log stacktrace'
    })
};
exports.exceptionStacktraceTab = {
    key: 'exception_stacktrace',
    label: i18n_1.i18n.translate('xpack.apm.propertiesTable.tabs.exceptionStacktraceLabel', {
        defaultMessage: 'Exception stacktrace'
    })
};
function getTabs(error) {
    const hasLogStacktrace = !lodash_1.isEmpty(idx_1.idx(error, _ => _.error.log.stacktrace));
    return [
        ...(hasLogStacktrace ? [exports.logStacktraceTab] : []),
        exports.exceptionStacktraceTab,
        ...tabConfig_1.getTabsFromObject(error)
    ];
}
exports.getTabs = getTabs;
