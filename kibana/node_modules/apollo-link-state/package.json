{
  "name": "apollo-link-state",
  "version": "0.4.1",
  "description": "An easy way to manage local state with Apollo Link",
  "author": "James Baxley <james@meteor.com>",
  "license": "MIT",
  "main": "./lib/bundle.umd.js",
  "module": "./lib/index.js",
  "jsnext:main": "./lib/index.js",
  "typings": "./lib/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-link-state.git"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-link-state/issues"
  },
  "homepage": "https://github.com/apollographql/apollo-link-state#readme",
  "scripts": {
    "build:browser": "browserify ./lib/bundle.umd.js -o=./lib/bundle.js --i apollo-link --i apollo-utilities --i graphql-anywhere && npm run minify:browser",
    "build": "tsc -p .",
    "bundle": "rollup -c",
    "clean": "rimraf lib/* && rimraf coverage/*",
    "filesize": "npm run build && npm run build:browser && bundlesize",
    "prelint": "npm run lint-fix",
    "lint-fix": "prettier --trailing-comma all --single-quote --write \"src/**/*.{j,t}s*\"",
    "lint": "tslint --type-check -p tsconfig.json -c tslint.json src/*.ts",
    "lint-staged": "lint-staged",
    "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
    "postbuild": "npm run bundle",
    "prebuild": "npm run clean",
    "prepublishOnly": "npm run clean && npm run build",
    "test": "jest",
    "coverage": "npm run lint && jest --coverage",
    "watch": "trap 'kill -9 %1' SIGINT; tsc -w -p . & rollup -w -c"
  },
  "bundlesize": [
    {
      "name": "apollo-link-state",
      "path": "./lib/bundle.min.js",
      "threshold": "1 Kb"
    }
  ],
  "peerDependencies": {
    "apollo-link": "^1.0.0"
  },
  "devDependencies": {},
  "jest": {
    "mapCoverage": true,
    "transform": {
      ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ]
  },
  "dependencies": {},
  "lint-staged": {
    "*.ts*": [
      "prettier --trailing-comma all --single-quote --write",
      "git add"
    ],
    "*.js*": [
      "prettier --trailing-comma all --single-quote --write",
      "git add"
    ],
    "*.json*": [
      "prettier --write",
      "git add"
    ]
  },
  "pre-commit": "lint-staged",
  "cleaned": true
}